{"version":3,"sources":["TodoContext/index.js","TodoContext/useLocalStorage.js","components/TodoCounter/index.js","components/TodoSearch/index.js","components/TodoList/index.js","components/CreateTodoButton/index.js","components/TodoItem/index.js","Modal/index.js","components/TodoForm/index.js","components/EmptyTodo/index.js","components/TodoError/index.js","components/TodoLoading/index.js","App/AppUI.js","App/index.js","reportWebVitals.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","props","searchedTodos","_useLocalStorage","itemName","initialValue","_React$useState","useState","_React$useState2","Object","slicedToArray","error","setError","_React$useState3","_React$useState4","loading","setLoading","_React$useState5","_React$useState6","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringfiedItem","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","todoText","text","toLowerCase","searchText","includes","react_default","a","createElement","Provider","value","addTodo","newTodos","toConsumableArray","push","onCompletTodos","todoIndex","findIndex","onDeleteTodos","todoindex","splice","children","TodoCounter","_React$useContext","useContext","className","TodoSearch","placeholder","onChange","event","target","TodoList","CreateTodoButton","onClick","prevState","TodoItem","concat","onComplete","xmlns","width","height","fill","class","viewBox","d","onDelete","fill-rule","Modal","_ref","ReactDOM","createPortal","document","getElementById","TodoForm","newTodoValue","setNewTodoValue","onSubmit","preventDefault","type","EmptyTodo","TodoError","TodoLoading","Fragment","react_content_loader_es","assign","backgroundColor","cx","cy","r","AppUI","components_TodoCounter","components_TodoSearch","components_TodoList","Array","map","i","TodoLoading_TodoLoading","key","components_TodoItem","src_Modal","TodoForm_TodoForm","components_CreateTodoButton","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","render","src_App"],"mappings":"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","file":"static/js/main.591c59a8.chunk.js","sourcesContent":["import React from 'react';\nimport {useLocalStorage} from './useLocalStorage'\n\nconst TodoContext= React.createContext();\n\nfunction TodoProvider(props){\n      //Coonsume custom hook\n  const {\n    item: todos,\n    saveItem: saveTodos,\n    loading,\n    error,\n  } = useLocalStorage('TODOS_V1', []);\n\n  \n\n  //Create state to save va;ue of the input\n  const[searchValue,setSearchValue]=React.useState('');\n\n//Create State for Modal\n\n  const[openModal,setOpenModal]=React.useState(false);\n\n  //ceate state for Tdods\n \n\n  //constant of completed todos\n  const completedTodos= todos.filter(todo=>todo.completed).length;\n  //constant of total todos\n  const totalTodos= todos.length;\n  //variable that save the array of searched todos\n  let searchedTodos=[];\n  //conditional to filter searchTodos\n \n  searchedTodos = todos.filter(todo => {\n    const todoText = todo.text.toLowerCase();\n    const searchText = searchValue.toLowerCase();\n    return todoText.includes(searchText);\n  });\n\n  const addTodo=(text)=>{\n    //create a new array of todos that storage a copy of the original array of todos\n    const newTodos=[...todos];\n    //modifi the new array to a cmoplete todo\n    newTodos.push({completed:false,text});\n    //rerender the new todoArray with the changes \n    saveTodos(newTodos);\n  }\n\n  //function to check Todos\n  const onCompletTodos=(text)=>{\n    //search the index of the todo \n    const todoIndex=todos.findIndex(todo=>todo.text===text);\n    //create a new array of todos that storage a copy of the original array of todos\n    const newTodos=[...todos];\n    //modifi the new array to a cmoplete todo\n    newTodos[todoIndex].completed=true;\n    //rerender the new todoArray with the changes \n    saveTodos(newTodos);\n  }\n\n\n  //function to delete todos is almost the same function of onCompleteTodos\n  const onDeleteTodos=(text)=>{\n    const todoindex=todos.findIndex(todo=>todo.text===text);\n    const newTodos=[...todos];\n    newTodos.splice(todoindex,1)\n    saveTodos(newTodos);\n  }\n    return(\n\n        <TodoContext.Provider value={{\n            loading,\n            error,\n            completedTodos,\n            totalTodos,\n            searchValue,\n            setSearchValue,\n            searchedTodos,\n            addTodo,\n            onCompletTodos,\n            onDeleteTodos,\n            openModal,\n            setOpenModal,\n\n        }}>\n            {props.children}\n        </TodoContext.Provider>\n    );\n\n}\n\nexport {TodoContext , TodoProvider} ;","import React from \"react\";\n//custom Hook\nfunction useLocalStorage(itemName,initialValue){\n    const [error,setError]=React.useState(false);\n    const [loading,setLoading]=React.useState(true);\n    const [item,setItem]=React.useState(initialValue);\n  \n    React.useEffect(()=>{\n      setTimeout(()=>{\n        try{\n          //localStorageTodos is a text \"STRING\"\n          const localStorageItem=localStorage.getItem(itemName);\n          //ParseItem is the array to send for default \n          let parsedItem;\n          //If the user is new \n          if(!localStorageItem){\n          //establish a empty array for Item_V1 \n            localStorage.setItem(itemName,JSON.stringify(initialValue));\n          //so parseItem that is our deafult Todo List is empty\n            parsedItem=initialValue;\n          }else{\n            parsedItem=JSON.parse(localStorageItem);\n          }\n          setItem(parsedItem);\n          setLoading(false);\n        }catch(error){\n          setError(error);\n        }\n      },4000);\n    });\n  \n  \n  const saveItem =(newItem)=>{\n  \n  try{\n    //Transform array in text\n    const stringfiedItem=JSON.stringify(newItem);\n    //save in local storage\n    localStorage.setItem(itemName,stringfiedItem);\n    //update the estate of the todoArray\n    setItem(newItem);\n  }catch(error){\n    setError(error);\n  }\n  };\n  \n  \n  return {\n    item,\n    saveItem,\n    loading,\n    error,\n  };\n  }\n  \n  export {useLocalStorage};","import React from 'react';\nimport { TodoContext } from '../../TodoContext';\nimport './TodoCounter.css';\n\nfunction TodoCounter() {\n  const {completedTodos,totalTodos}=React.useContext(TodoContext);\n  return (\n     <h2 className='TodoCounter'>You done {completedTodos} of {totalTodos}</h2>\n  );\n}\n\nexport default TodoCounter;","import React from 'react';\nimport { TodoContext } from '../../TodoContext';\nimport './TodoSearch.css';\n\nfunction TodoSearch() {\n    const {searchValue,setSearchValue}=React.useContext(TodoContext);\n  const onSearchValueChange=(event)=>{\n    setSearchValue(event.target.value);\n  };\n\n  return (\n\n      <input \n      className=\"TodoSearch\" \n      placeholder=\"Enter Task\" \n      value={searchValue}\n      onChange={onSearchValueChange}/>\n  \n);\n  \n}\n\nexport default TodoSearch;","import React from 'react';\nimport './TodoList.css';\n\n\nfunction TodoList(props) {\n  return (\n    <section>\n      <ul>\n        {/*props. children va ser todolist*/}\n        {props.children}\n      </ul>\n    </section>\n  )\n}\n\nexport default TodoList;","import React from 'react';\nimport \"./CreateTodoButton.css\";\n\nfunction CreateTodoButton(props) {\n\n  const onClickCreateButton=()=>{\n    props.setOpenModal(prevState=>!prevState);\n  }\n\n\n  return (\n    \n      <button className='CreateTodoButton' onClick={onClickCreateButton}>+</button>\n    \n  )\n}\n\nexport default CreateTodoButton;","import React from 'react';\nimport './TodoItem.css';\n\nfunction TodoItem(props) {\n\n\n\n  return (\n    <li className='TodoItem'>\n      <span className={`Icon Icon-check ${props.completed && 'Icon-check--active'}`} \n      onClick={props.onComplete}>\n\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"35\" height=\"35\" fill=\"currentColor\" class=\"bi bi-check2-circle\" viewBox=\"0 0 16 16\">\n      <path d=\"M2.5 8a5.5 5.5 0 0 1 8.25-4.764.5.5 0 0 0 .5-.866A6.5 6.5 0 1 0 14.5 8a.5.5 0 0 0-1 0 5.5 5.5 0 1 1-11 0z\"/>\n      <path d=\"M15.354 3.354a.5.5 0 0 0-.708-.708L8 9.293 5.354 6.646a.5.5 0 1 0-.708.708l3 3a.5.5 0 0 0 .708 0l7-7z\"/>\n</svg>\n      </span>\n      <p className={`TodoItem-p ${props.completed && 'TodoItem-p--complete'}`}>\n      {props.text}\n      </p>\n      <span className='Icon Icon-delete' \n      onClick={props.onDelete}>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" class=\"bi bi-trash\" viewBox=\"0 0 16 16\">\n      <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\n      <path fill-rule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\n</svg>\n      </span>\n\n    </li>\n  )\n}\n\nexport default TodoItem;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Modal.css';\n\nfunction Modal({children}){\n    return ReactDOM.createPortal(\n       <div className=\"ModalBackground\">\n        {children}\n        </div>,\n        document.getElementById('modal')\n\n    )\n}\n\nexport default Modal;","import React from 'react'\nimport { TodoContext } from '../../TodoContext';\nimport './TodoForm.css';\n\nexport default function TodoForm() {\n\n    //state for textare\n    const[newTodoValue,setNewTodoValue]=React.useState('');\n    const {\n        addTodo,\n        setOpenModal,\n    }=React.useContext(TodoContext);\n\n\nconst onChange=(event)=>{\nsetNewTodoValue(event.target.value);\n}\n\nconst onCancel=()=>{\n    setOpenModal(false);\n}\n\nconst onSubmit=(event)=>{\n    //evitar que se recargue la pagina\n    event.preventDefault();\n    addTodo(newTodoValue);\n    setOpenModal(false);\n\n}\n\n\n  return (\n   <form onSubmit={onSubmit}>\n       <label>👉🏻 Do all with 💜 👈🏻</label>\n       <textarea\n       value={newTodoValue}\n       onChange={onChange}\n       placeholder='Write your next To Do'/>\n       <div className='buttonContainer'>\n       <button \n           className='todoButtonAdd'\n           onClick={onSubmit}>\n               Add\n           </button>\n           \n           <button className='todoButtonCancel'\n           type='button'\n           onClick={onCancel}>\n               Cancel\n           </button>\n       </div>\n   </form>\n  )\n}\n","import React from 'react'\n\nexport default function EmptyTodo() {\n  return (\n    <div>EmptyTodo</div>\n  )\n}\n","import React from 'react'\n\nexport default function TodoError() {\n  return (\n    <div>TodoError</div>\n  )\n}\n","import React from 'react';\nimport './TodoLoading.css';\nimport ContentLoader from 'react-content-loader'\n\n\nexport default function TodoLoading(props) {\n  return (\n  <>\n    <div className='LoadingContainer'>\n     \n      <div className=\"LoadingText\">\n          <ContentLoader\n        viewBox=\"0 0 400 160\"\n        height={16}\n        width={100}\n        backgroundColor=\"transparent\"\n        {...props}\n      >\n        <circle cx=\"150\" cy=\"86\" r=\"50\" />\n        <circle cx=\"194\" cy=\"86\" r=\"50\" />\n        <circle cx=\"238\" cy=\"86\" r=\"50\" />\n      </ContentLoader>\n    </div>\n      \n    </div>\n    \n</>\n    \n  )\n}","import React from 'react';\nimport { TodoContext } from '../TodoContext';\nimport TodoCounter from \"../components/TodoCounter\";\nimport TodoSearch from \"../components/TodoSearch\";\nimport TodoList from \"../components/TodoList\";\nimport CreateTodoButton from \"../components/CreateTodoButton\";\nimport TodoItem from \"../components/TodoItem\";\nimport Modal from '../Modal';\nimport TodoForm from '../components/TodoForm';\nimport EmptyTodo from '../components/EmptyTodo';\nimport TodoError from '../components/TodoError';\nimport TodoLoading from '../components/TodoLoading'\n\nexport default function AppUI() {\n\n  const{\n    error,\n    loading,\n    searchedTodos,\n    onCompletTodos,\n    onDeleteTodos,\n    openModal,\n    setOpenModal,\n}=React.useContext(TodoContext);\n\n  return (\n       //ReactFragment lo utilizo para envolver todos los componentes ya que react solo permite pasar un componenete componente\n       <React.Fragment>\n       <TodoCounter/>\n       <TodoSearch/>\n\n       \n            <TodoList >\n            {error&&<TodoError error={error}/>}\n            {loading && new Array(3).fill(1).map((a, i) => <TodoLoading key={i} />)}\n            {(!loading && !searchedTodos.length )&&<EmptyTodo/>}\n  \n           {searchedTodos.map(todo =>(\n             <TodoItem \n             key={todo.text}\n             text={todo.text}\n             completed={todo.completed}\n             onComplete={()=>onCompletTodos(todo.text)}\n             onDelete={()=>onDeleteTodos(todo.text)}\n             />\n           ))}\n         \n            </TodoList> \n       { openModal && \n       (<Modal>\n         <TodoForm/>\n       </Modal>)}\n       \n       <CreateTodoButton\n       setOpenModal={setOpenModal}/>\n          \n     </React.Fragment>\n     \n  )\n}\nexport { AppUI };","import React from \"react\";\nimport AppUI from \"./AppUI\";\nimport {TodoProvider} from '../TodoContext';\n//import './App.css';\n\n/*\nconst =[\n  {text:\"hablar con mama\", completed:false},\n  {text:\"Curso Platzi\", completed:true},\n  {text:\"Ir al Gym\", completed:false},\n]*/\n\n\n\n\nfunction App() {\n\n  return (\n    <TodoProvider>\n    <AppUI/>\n    </TodoProvider>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/index';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n    <App />,\n  \n  document.getElementById('root')\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}